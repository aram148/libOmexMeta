language: cpp
compiler: gcc

matrix:
  include:
    - os: linux
      sudo: false
      dist: bionic
      compiler: gcc
      env:
          - CMAKE_CMD_OPTION="-DHAVE_DEPENDENCIES=OFF -DBUILD_TESTS=ON -DBUILD_SHARED=ON -DBUILD_WRAPPER_TESTS=ON -DBUILD_DOCS=OFF -DWITH_ADDRESS_SANITIZER=OFF"
          - CURRENT_DIR=$(pwd)
          - INSTALL_DIR=$CURRENT_DIR/install-ubuntu
    - before_install:
        # install cmake
        - sudo apt update
        - sudo apt install -y wget
        - wget https://github.com/Kitware/CMake/releases/download/v3.15.7/cmake-3.15.7-Linux-x86_64.tar.gz
        - tar -xvf cmake-3.15.7-Linux-x86_64.tar.gz
        - PATH=$PATH:/cmake-3.15.7-Linux-x86_64/bin/ # add cmake bin directory to path
        # test that it works
        - cmake
        - sudo apt-get update
        - sudo apt install -y dialog apt-utils make build-essential checkinstall zlib1g-dev libltdl-dev lzma libpcre3 libpcre3-dev uuid-dev libxml2 libxml2-dev libxslt1-dev yajl-tools libgss-dev libmpfr-dev idn2 libpthread-stubs0-dev curl mysql-server
    - install:
        - mkdir build && cd build
        - cmake $CMAKE_CMD_OPTION -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR ..
        - make
        - sudo make install
    - script:
      -

#    - os: osx
#      compiler: xcode6.4

#    - os: osx
#      compiler: xcode8



script:
  - mkdir build
  - cd build
  - cmake .. $CMAKE_CMD_OPTION
  - make -j 2
  - make test

# Hook code coverage report with codecov.io
after_success:
    # Creating report
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
  - lcov --list coverage.info #debug info
  # Uploading report to CodeCov
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

# Disable notifications
notifications:
  email: false
