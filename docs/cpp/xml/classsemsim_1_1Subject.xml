<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsemsim_1_1Subject" kind="class" language="C++" prot="public">
    <compoundname>semsim::Subject</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsemsim_1_1Subject_1a7c9e104ac0d67326990c81257119fa97" prot="private" static="no" mutable="no">
        <type>librdf_node *</type>
        <definition>librdf_node* semsim::Subject::node_</definition>
        <argsstring></argsstring>
        <name>node_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="23" column="1" bodyfile="src/semsim/Subject.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsemsim_1_1Subject_1a84681e9284a09f767b0adebfc3073e7f" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::Subject::Subject</definition>
        <argsstring>(librdf_node *node)</argsstring>
        <name>Subject</name>
        <param>
          <type>librdf_node *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="25" column="1" bodyfile="src/semsim/Subject.cpp" bodystart="10" bodyend="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsemsim_1_1Subject_1aa17c4b8d8a774d815129eb78ee9be4c6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::Subject::Subject</definition>
        <argsstring>(LibrdfNode node)</argsstring>
        <name>Subject</name>
        <param>
          <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="28" column="1" bodyfile="src/semsim/Subject.cpp" bodystart="14" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Subject_1a47a10ae3d6c46bdd2c6524f1d09a0741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::Subject::Subject</definition>
        <argsstring>()=default</argsstring>
        <name>Subject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Subject_1a190fa201096714efe10354f73e340146" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>librdf_node *</type>
        <definition>librdf_node * semsim::Subject::getNode</definition>
        <argsstring>() const</argsstring>
        <name>getNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="32" column="1" bodyfile="src/semsim/Subject.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Subject_1affe03a33bb3ef32bce77e26b24f018f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Subject::setNode</definition>
        <argsstring>(librdf_node *node)</argsstring>
        <name>setNode</name>
        <param>
          <type>librdf_node *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="34" column="1" bodyfile="src/semsim/Subject.cpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Subject_1a4244a40a89fb9a3dd6ffff35cd95f7ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string semsim::Subject::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="44" column="1" bodyfile="src/semsim/Subject.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Subject_1aecfc41aed32eb5a2a5c5eadc814192d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool semsim::Subject::isSet</definition>
        <argsstring>() const</argsstring>
        <name>isSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="46" column="1" bodyfile="src/semsim/Subject.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Subject_1ad522878616f2ed76b3a807b9374ea090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Subject::free</definition>
        <argsstring>()</argsstring>
        <name>free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="48" column="1" bodyfile="src/semsim/Subject.cpp" bodystart="41" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsemsim_1_1Subject_1ad119bbf8b29abea7a23efc1df6268052" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1Subject" kindref="compound">Subject</ref></type>
        <definition>Subject semsim::Subject::fromRawPtr</definition>
        <argsstring>(librdf_node *node)</argsstring>
        <name>fromRawPtr</name>
        <param>
          <type>librdf_node *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="36" column="1" bodyfile="src/semsim/Subject.cpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Subject_1a180f5d9c5523f96711dd4bd363e0b60b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1Subject" kindref="compound">Subject</ref></type>
        <definition>Subject semsim::Subject::fromUri</definition>
        <argsstring>(const std::string &amp;uri)</argsstring>
        <name>fromUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="38" column="1" bodyfile="src/semsim/Subject.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Subject_1a3a117e493ff15d93414016bb2d8730ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1Subject" kindref="compound">Subject</ref></type>
        <definition>Subject semsim::Subject::fromBlank</definition>
        <argsstring>(const std::string &amp;blank)</argsstring>
        <name>fromBlank</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>blank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Subject.h" line="40" column="1" bodyfile="src/semsim/Subject.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/semsim/Subject.h" line="21" column="1" bodyfile="src/semsim/Subject.h" bodystart="21" bodyend="50"/>
    <listofallmembers>
      <member refid="classsemsim_1_1Subject_1ad522878616f2ed76b3a807b9374ea090" prot="public" virt="non-virtual"><scope>semsim::Subject</scope><name>free</name></member>
      <member refid="classsemsim_1_1Subject_1a3a117e493ff15d93414016bb2d8730ec" prot="public" virt="non-virtual"><scope>semsim::Subject</scope><name>fromBlank</name></member>
      <member refid="classsemsim_1_1Subject_1ad119bbf8b29abea7a23efc1df6268052" prot="public" virt="non-virtual"><scope>semsim::Subject</scope><name>fromRawPtr</name></member>
      <member refid="classsemsim_1_1Subject_1a180f5d9c5523f96711dd4bd363e0b60b" prot="public" virt="non-virtual"><scope>semsim::Subject</scope><name>fromUri</name></member>
      <member refid="classsemsim_1_1Subject_1a190fa201096714efe10354f73e340146" prot="public" virt="non-virtual"><scope>semsim::Subject</scope><name>getNode</name></member>
      <member refid="classsemsim_1_1Subject_1aecfc41aed32eb5a2a5c5eadc814192d2" prot="public" virt="non-virtual"><scope>semsim::Subject</scope><name>isSet</name></member>
      <member refid="classsemsim_1_1Subject_1a7c9e104ac0d67326990c81257119fa97" prot="private" virt="non-virtual"><scope>semsim::Subject</scope><name>node_</name></member>
      <member refid="classsemsim_1_1Subject_1affe03a33bb3ef32bce77e26b24f018f8" prot="public" virt="non-virtual"><scope>semsim::Subject</scope><name>setNode</name></member>
      <member refid="classsemsim_1_1Subject_1a4244a40a89fb9a3dd6ffff35cd95f7ca" prot="public" virt="non-virtual"><scope>semsim::Subject</scope><name>str</name></member>
      <member refid="classsemsim_1_1Subject_1a84681e9284a09f767b0adebfc3073e7f" prot="private" virt="non-virtual"><scope>semsim::Subject</scope><name>Subject</name></member>
      <member refid="classsemsim_1_1Subject_1aa17c4b8d8a774d815129eb78ee9be4c6" prot="public" virt="non-virtual"><scope>semsim::Subject</scope><name>Subject</name></member>
      <member refid="classsemsim_1_1Subject_1a47a10ae3d6c46bdd2c6524f1d09a0741" prot="public" virt="non-virtual"><scope>semsim::Subject</scope><name>Subject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
