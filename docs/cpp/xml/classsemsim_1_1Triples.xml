<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsemsim_1_1Triples" kind="class" language="C++" prot="public">
    <compoundname>semsim::Triples</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsemsim_1_1Triples_1a31a233513e4de0882c169b8f15a64a7d" prot="private" static="no" mutable="no">
        <type>SharedTripleVector</type>
        <definition>SharedTripleVector semsim::Triples::triples_</definition>
        <argsstring></argsstring>
        <name>triples_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="30" column="1" bodyfile="src/semsim/Triples.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsemsim_1_1Triples_1a438e0e7faa4e9cbb503f14c62d77644d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::Triples::Triples</definition>
        <argsstring>()</argsstring>
        <name>Triples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a620eba7d105212f69f762e9614c82928" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::Triples::Triples</definition>
        <argsstring>(Triple triple)</argsstring>
        <name>Triples</name>
        <param>
          <type><ref refid="classsemsim_1_1Triple" kindref="compound">Triple</ref></type>
          <declname>triple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="35" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a09d81ba233bf8a3ca5a9ede2df74c825" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::Triples::Triples</definition>
        <argsstring>(std::vector&lt; Triple &gt; triples)</argsstring>
        <name>Triples</name>
        <param>
          <type>std::vector&lt; <ref refid="classsemsim_1_1Triple" kindref="compound">Triple</ref> &gt;</type>
          <declname>triples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="37" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="15" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a6a93d787c250b81592bb9b5fa30fdec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Triples::push_back</definition>
        <argsstring>(Triple triple)</argsstring>
        <name>push_back</name>
        <param>
          <type><ref refid="classsemsim_1_1Triple" kindref="compound">Triple</ref></type>
          <declname>triple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="39" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a2387f43385258c96bd68ca38d1a53c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Triples::emplace_back</definition>
        <argsstring>(Subject subject, const PredicatePtr &amp;predicatePtr, const Resource &amp;resource)</argsstring>
        <name>emplace_back</name>
        <param>
          <type><ref refid="classsemsim_1_1Subject" kindref="compound">Subject</ref></type>
          <declname>subject</declname>
        </param>
        <param>
          <type>const PredicatePtr &amp;</type>
          <declname>predicatePtr</declname>
        </param>
        <param>
          <type>const <ref refid="classsemsim_1_1Resource" kindref="compound">Resource</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="43" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a69c8a69a0dcffc60e510b731a0ffec69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Triples::emplace_back</definition>
        <argsstring>(Subject subject, const Predicate &amp;predicate, const Resource &amp;resource)</argsstring>
        <name>emplace_back</name>
        <param>
          <type><ref refid="classsemsim_1_1Subject" kindref="compound">Subject</ref></type>
          <declname>subject</declname>
        </param>
        <param>
          <type>const <ref refid="classsemsim_1_1Predicate" kindref="compound">Predicate</ref> &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const <ref refid="classsemsim_1_1Resource" kindref="compound">Resource</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="45" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a139321c0554ce0cf98d2fccc82599653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Triples::emplace_back</definition>
        <argsstring>(Subject subject, BiomodelsBiologyQualifier predicate, const Resource &amp;resource)</argsstring>
        <name>emplace_back</name>
        <param>
          <type><ref refid="classsemsim_1_1Subject" kindref="compound">Subject</ref></type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="classsemsim_1_1BiomodelsBiologyQualifier" kindref="compound">BiomodelsBiologyQualifier</ref></type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const <ref refid="classsemsim_1_1Resource" kindref="compound">Resource</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="47" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a7a7839f22cac425a78e6b4c95fa7d423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Triples::emplace_back</definition>
        <argsstring>(Subject subject, BiomodelsModelQualifier predicate, const Resource &amp;resource)</argsstring>
        <name>emplace_back</name>
        <param>
          <type><ref refid="classsemsim_1_1Subject" kindref="compound">Subject</ref></type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="classsemsim_1_1BiomodelsModelQualifier" kindref="compound">BiomodelsModelQualifier</ref></type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const <ref refid="classsemsim_1_1Resource" kindref="compound">Resource</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="49" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a83049cf0e93d420a318bd041ec5410fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Triples::emplace_back</definition>
        <argsstring>(Subject subject, DCTerm predicate, const Resource &amp;resource)</argsstring>
        <name>emplace_back</name>
        <param>
          <type><ref refid="classsemsim_1_1Subject" kindref="compound">Subject</ref></type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="classsemsim_1_1DCTerm" kindref="compound">DCTerm</ref></type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const <ref refid="classsemsim_1_1Resource" kindref="compound">Resource</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="51" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1aceaa9df401907b19d286ae8be29a4ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Triples::emplace_back</definition>
        <argsstring>(Subject subject, SemSim predicate, const Resource &amp;resource)</argsstring>
        <name>emplace_back</name>
        <param>
          <type><ref refid="classsemsim_1_1Subject" kindref="compound">Subject</ref></type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="classsemsim_1_1SemSim" kindref="compound">SemSim</ref></type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const <ref refid="classsemsim_1_1Resource" kindref="compound">Resource</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="53" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a0cdb24ded3d2c8bcec95a41cfd8f14ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Triples::emplace_back</definition>
        <argsstring>(librdf_node *subject, librdf_node *predicate, librdf_node *resource)</argsstring>
        <name>emplace_back</name>
        <param>
          <type>librdf_node *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type>librdf_node *</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>librdf_node *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="55" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a95177537847688d33f83302a65767982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; semsim::Triples::getSubjectsStr</definition>
        <argsstring>()</argsstring>
        <name>getSubjectsStr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="57" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1aa51480fb718cd5b47a2c96fc99a10c2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; semsim::Triples::getPredicates</definition>
        <argsstring>()</argsstring>
        <name>getPredicates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="59" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1ae4e47c0881214aec04987fada026f9ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; semsim::Triples::getResources</definition>
        <argsstring>()</argsstring>
        <name>getResources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="61" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a9787be0290ba6519cc4f71b28ce280f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int semsim::Triples::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="63" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a7c107f7dd600189cff1b0abf6bdd5e72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SharedTripleVector::iterator</type>
        <definition>SharedTripleVector::iterator semsim::Triples::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="65" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a9551a7d3ecc878b6ff87ddd2c52d6481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SharedTripleVector::iterator</type>
        <definition>SharedTripleVector::iterator semsim::Triples::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="67" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1a3fce442d97360b0c6ccb55fdf11f0bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string semsim::Triples::str</definition>
        <argsstring>(const std::string &amp;format=&quot;rdfxml-abbrev&quot;, std::string base=&quot;file://./annotations.rdf&quot;)</argsstring>
        <name>str</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>format</declname>
          <defval>&quot;rdfxml-abbrev&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>base</declname>
          <defval>&quot;file://./annotations.rdf&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="69" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="101" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Triples_1afb9f000468cbe6c68f6c5706f0b2c781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Triples::push_back</definition>
        <argsstring>(const std::shared_ptr&lt; Triple &gt; &amp;triple)</argsstring>
        <name>push_back</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classsemsim_1_1Triple" kindref="compound">Triple</ref> &gt; &amp;</type>
          <declname>triple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Triples.h" line="71" column="1" bodyfile="src/semsim/Triples.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/semsim/Triples.h" line="27" column="1" bodyfile="src/semsim/Triples.h" bodystart="27" bodyend="72"/>
    <listofallmembers>
      <member refid="classsemsim_1_1Triples_1a7c107f7dd600189cff1b0abf6bdd5e72" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>begin</name></member>
      <member refid="classsemsim_1_1Triples_1a2387f43385258c96bd68ca38d1a53c94" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>emplace_back</name></member>
      <member refid="classsemsim_1_1Triples_1a69c8a69a0dcffc60e510b731a0ffec69" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>emplace_back</name></member>
      <member refid="classsemsim_1_1Triples_1a139321c0554ce0cf98d2fccc82599653" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>emplace_back</name></member>
      <member refid="classsemsim_1_1Triples_1a7a7839f22cac425a78e6b4c95fa7d423" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>emplace_back</name></member>
      <member refid="classsemsim_1_1Triples_1a83049cf0e93d420a318bd041ec5410fb" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>emplace_back</name></member>
      <member refid="classsemsim_1_1Triples_1aceaa9df401907b19d286ae8be29a4ed1" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>emplace_back</name></member>
      <member refid="classsemsim_1_1Triples_1a0cdb24ded3d2c8bcec95a41cfd8f14ec" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>emplace_back</name></member>
      <member refid="classsemsim_1_1Triples_1a9551a7d3ecc878b6ff87ddd2c52d6481" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>end</name></member>
      <member refid="classsemsim_1_1Triples_1aa51480fb718cd5b47a2c96fc99a10c2c" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>getPredicates</name></member>
      <member refid="classsemsim_1_1Triples_1ae4e47c0881214aec04987fada026f9ae" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>getResources</name></member>
      <member refid="classsemsim_1_1Triples_1a95177537847688d33f83302a65767982" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>getSubjectsStr</name></member>
      <member refid="classsemsim_1_1Triples_1a6a93d787c250b81592bb9b5fa30fdec2" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>push_back</name></member>
      <member refid="classsemsim_1_1Triples_1afb9f000468cbe6c68f6c5706f0b2c781" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>push_back</name></member>
      <member refid="classsemsim_1_1Triples_1a9787be0290ba6519cc4f71b28ce280f6" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>size</name></member>
      <member refid="classsemsim_1_1Triples_1a3fce442d97360b0c6ccb55fdf11f0bf2" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>str</name></member>
      <member refid="classsemsim_1_1Triples_1a438e0e7faa4e9cbb503f14c62d77644d" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>Triples</name></member>
      <member refid="classsemsim_1_1Triples_1a620eba7d105212f69f762e9614c82928" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>Triples</name></member>
      <member refid="classsemsim_1_1Triples_1a09d81ba233bf8a3ca5a9ede2df74c825" prot="public" virt="non-virtual"><scope>semsim::Triples</scope><name>Triples</name></member>
      <member refid="classsemsim_1_1Triples_1a31a233513e4de0882c169b8f15a64a7d" prot="private" virt="non-virtual"><scope>semsim::Triples</scope><name>triples_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
