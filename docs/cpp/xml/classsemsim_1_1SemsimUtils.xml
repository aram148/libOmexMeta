<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsemsim_1_1SemsimUtils" kind="class" language="C++" prot="public">
    <compoundname>semsim::SemsimUtils</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsemsim_1_1SemsimUtils_1a910ddcbcc280b1f0ae9513c550fd34d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::SemsimUtils::SemsimUtils</definition>
        <argsstring>()=default</argsstring>
        <name>SemsimUtils</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/SemsimUtils.h" line="26" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsemsim_1_1SemsimUtils_1ac8367db330391787072c851985398805" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool semsim::SemsimUtils::exists</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>exists</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/SemsimUtils.h" line="28" column="1" bodyfile="src/semsim/SemsimUtils.cpp" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1SemsimUtils_1a1693cfd51439a6cc8c1144e82c2e83b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int semsim::SemsimUtils::removeFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>removeFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/SemsimUtils.h" line="30" column="1" bodyfile="src/semsim/SemsimUtils.cpp" bodystart="13" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1SemsimUtils_1af758a31b9f4de651636587414c071059" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::SemsimUtils::removeIfExists</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>removeIfExists</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/SemsimUtils.h" line="32" column="1" bodyfile="src/semsim/SemsimUtils.cpp" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1SemsimUtils_1a8eca0e4f3abb89c3577a8e099de8b9ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::SemsimUtils::download</definition>
        <argsstring>(const std::string &amp;url, std::string filename)</argsstring>
        <name>download</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/SemsimUtils.h" line="34" column="1" bodyfile="src/semsim/SemsimUtils.cpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1SemsimUtils_1a07824a843bec362a8b6f7de1154068d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; semsim::SemsimUtils::splitStringBy</definition>
        <argsstring>(const std::string &amp;str, char delimiter)</argsstring>
        <name>splitStringBy</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/SemsimUtils.h" line="36" column="1" bodyfile="src/semsim/SemsimUtils.cpp" bodystart="36" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1SemsimUtils_1a24671cf37888fe4b32188bd6759056d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string semsim::SemsimUtils::generateUniqueMetaid</definition>
        <argsstring>(librdf_model *model, std::string metaid_base, std::vector&lt; std::string &gt; exclusions=std::vector&lt; std::string &gt;())</argsstring>
        <name>generateUniqueMetaid</name>
        <param>
          <type>librdf_model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>metaid_base</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>exclusions</declname>
          <defval>std::vector&lt; std::string &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/SemsimUtils.h" line="38" column="1" bodyfile="src/semsim/SemsimUtils.cpp" bodystart="52" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1SemsimUtils_1aa9435581e7fb3183edad803dbb2f5513" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string semsim::SemsimUtils::addFilePrefixToString</definition>
        <argsstring>(std::string str)</argsstring>
        <name>addFilePrefixToString</name>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/SemsimUtils.h" line="43" column="1" bodyfile="src/semsim/SemsimUtils.cpp" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1SemsimUtils_1a05a788ad4fb29a2f583fa1179abc15c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string semsim::SemsimUtils::getNamespaceFromUri</definition>
        <argsstring>(const std::string &amp;uri)</argsstring>
        <name>getNamespaceFromUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/SemsimUtils.h" line="52" column="1" bodyfile="src/semsim/SemsimUtils.cpp" bodystart="89" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/semsim/SemsimUtils.h" line="24" column="1" bodyfile="src/semsim/SemsimUtils.h" bodystart="24" bodyend="54"/>
    <listofallmembers>
      <member refid="classsemsim_1_1SemsimUtils_1aa9435581e7fb3183edad803dbb2f5513" prot="public" virt="non-virtual"><scope>semsim::SemsimUtils</scope><name>addFilePrefixToString</name></member>
      <member refid="classsemsim_1_1SemsimUtils_1a8eca0e4f3abb89c3577a8e099de8b9ba" prot="public" virt="non-virtual"><scope>semsim::SemsimUtils</scope><name>download</name></member>
      <member refid="classsemsim_1_1SemsimUtils_1ac8367db330391787072c851985398805" prot="public" virt="non-virtual"><scope>semsim::SemsimUtils</scope><name>exists</name></member>
      <member refid="classsemsim_1_1SemsimUtils_1a24671cf37888fe4b32188bd6759056d9" prot="public" virt="non-virtual"><scope>semsim::SemsimUtils</scope><name>generateUniqueMetaid</name></member>
      <member refid="classsemsim_1_1SemsimUtils_1a05a788ad4fb29a2f583fa1179abc15c0" prot="public" virt="non-virtual"><scope>semsim::SemsimUtils</scope><name>getNamespaceFromUri</name></member>
      <member refid="classsemsim_1_1SemsimUtils_1a1693cfd51439a6cc8c1144e82c2e83b3" prot="public" virt="non-virtual"><scope>semsim::SemsimUtils</scope><name>removeFile</name></member>
      <member refid="classsemsim_1_1SemsimUtils_1af758a31b9f4de651636587414c071059" prot="public" virt="non-virtual"><scope>semsim::SemsimUtils</scope><name>removeIfExists</name></member>
      <member refid="classsemsim_1_1SemsimUtils_1a910ddcbcc280b1f0ae9513c550fd34d2" prot="public" virt="non-virtual"><scope>semsim::SemsimUtils</scope><name>SemsimUtils</name></member>
      <member refid="classsemsim_1_1SemsimUtils_1a07824a843bec362a8b6f7de1154068d5" prot="public" virt="non-virtual"><scope>semsim::SemsimUtils</scope><name>splitStringBy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
