<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsemsim_1_1Query" kind="class" language="C++" prot="public">
    <compoundname>semsim::Query</compoundname>
      <sectiondef kind="user-defined">
      <header>: variable name</header>
      <description><para>librdf_query_results_get_binding_value_by_name: : #librdf_query_results query results</para><para>Get one binding value for a given name in the current result.</para><para>Return value: a new #librdf_node binding value or NULL on failure </para></description>
      <memberdef kind="function" id="classsemsim_1_1Query_1ad35d4b5e684f5b0b31579eba3afa049f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string semsim::Query::getBindingValueByName</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>getBindingValueByName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="127" column="1" bodyfile="src/semsim/Query.cpp" bodystart="116" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1a93f2a6b862e823f26858653e0f46bfde" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int semsim::Query::getBindingsCount</definition>
        <argsstring>()</argsstring>
        <name>getBindingsCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>librdf_query_results_get_bindings_count: : #librdf_query_results query results</para><para>Get the number of bound variables in the result.</para><para>Return value: &lt;0 if failed or results exhausted </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="137" column="1" bodyfile="src/semsim/Query.cpp" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1adc98ca404ecad9f4fd4f718c92721211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::Query::Query</definition>
        <argsstring>(librdf_model *model, std::string query)</argsstring>
        <name>Query</name>
        <param>
          <type>librdf_model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="144" column="1" bodyfile="src/semsim/Query.cpp" bodystart="12" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1a16a28232cd8bf950b1e76e017ec93561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::Query::Query</definition>
        <argsstring>(const Query &amp;query)=delete</argsstring>
        <name>Query</name>
        <param>
          <type>const <ref refid="classsemsim_1_1Query" kindref="compound">Query</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1a1edd5ec1cd5cb057121fa0b35fad48ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::Query::Query</definition>
        <argsstring>(Query &amp;&amp;query) noexcept</argsstring>
        <name>Query</name>
        <param>
          <type><ref refid="classsemsim_1_1Query" kindref="compound">Query</ref> &amp;&amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="160" column="1" bodyfile="src/semsim/Query.cpp" bodystart="29" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1ae76fa75112392cfdc176c7a7ee6912f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1Query" kindref="compound">Query</ref> &amp;</type>
        <definition>Query&amp; semsim::Query::operator=</definition>
        <argsstring>(const Query &amp;query)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsemsim_1_1Query" kindref="compound">Query</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1a3b7646a5d2722ff4d1962c3f0a620882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1Query" kindref="compound">Query</ref> &amp;</type>
        <definition>Query &amp; semsim::Query::operator=</definition>
        <argsstring>(Query &amp;&amp;query) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsemsim_1_1Query" kindref="compound">Query</ref> &amp;&amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="176" column="1" bodyfile="src/semsim/Query.cpp" bodystart="46" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1a8b74d77f2c4fbcd9800548aa4c4304ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Query::freeQuery</definition>
        <argsstring>()</argsstring>
        <name>freeQuery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="183" column="1" bodyfile="src/semsim/Query.cpp" bodystart="66" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1a83580c1b66d2d052696dd907e8594a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>librdf_stream *</type>
        <definition>librdf_stream * semsim::Query::resultsAsLibRdfStream</definition>
        <argsstring>()</argsstring>
        <name>resultsAsLibRdfStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="190" column="1" bodyfile="src/semsim/Query.cpp" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1a16b43e8d44b25e0d1fba34c73c5386dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ResultsMap</type>
        <definition>ResultsMap semsim::Query::resultsAsMap</definition>
        <argsstring>()</argsstring>
        <name>resultsAsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="217" column="1" bodyfile="src/semsim/Query.cpp" bodystart="154" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1ae44b7aff3ae00151f63cc3a355705091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string semsim::Query::resultsAsStr</definition>
        <argsstring>(const std::string &amp;output_format)</argsstring>
        <name>resultsAsStr</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>output_format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="225" column="1" bodyfile="src/semsim/Query.cpp" bodystart="128" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1ad629d8d9265fdc07dc88a698de69f2d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::Query::runQuery</definition>
        <argsstring>()</argsstring>
        <name>runQuery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="232" column="1" bodyfile="src/semsim/Query.cpp" bodystart="77" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsemsim_1_1Query_1a290bfc078cc098987cf35f6fbf105bbc" prot="private" static="no" mutable="no">
        <type>librdf_model *</type>
        <definition>librdf_model* semsim::Query::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="47" column="1" bodyfile="src/semsim/Query.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsemsim_1_1Query_1a4ed853584d4c34e1785d6d4cace71db3" prot="private" static="no" mutable="no">
        <type>librdf_query_results *</type>
        <definition>librdf_query_results* semsim::Query::query_results_</definition>
        <argsstring></argsstring>
        <name>query_results_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="48" column="1" bodyfile="src/semsim/Query.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsemsim_1_1Query_1a8bf6ebf97259a7d9016a11b50c193930" prot="private" static="no" mutable="no">
        <type>librdf_query *</type>
        <definition>librdf_query* semsim::Query::q_</definition>
        <argsstring></argsstring>
        <name>q_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="49" column="1" bodyfile="src/semsim/Query.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsemsim_1_1Query_1a053a23e5668c3ba822ff10e71ce56c06" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string semsim::Query::query_</definition>
        <argsstring></argsstring>
        <name>query_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="50" column="1" bodyfile="src/semsim/Query.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsemsim_1_1Query_1a54fb3eea8c246422856d12479c772c4c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; semsim::Query::valid_output_formats_</definition>
        <argsstring></argsstring>
        <name>valid_output_formats_</name>
        <initializer>= {
                &quot;xml&quot;,
                &quot;json&quot;,
                &quot;table&quot;,
                &quot;csv&quot;,
                &quot;mkr&quot;,
                &quot;tsv&quot;,
                &quot;html&quot;,
                &quot;turtle&quot;,
                &quot;rdfxml&quot;,
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="52" column="1" bodyfile="src/semsim/Query.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsemsim_1_1Query_1a455b614c839f1dabbb3f1c04c9a7a700" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int semsim::Query::next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="64" column="1" bodyfile="src/semsim/Query.cpp" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1aba1cba0d60d9618d4d8ef45f627d3f0c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool semsim::Query::isBindings</definition>
        <argsstring>()</argsstring>
        <name>isBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>librdf_query_results_is_bindings: : #librdf_query_results object</para><para>Test if librdf_query_results is variable bindings format.</para><para>Return value: non-0 if true </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="75" column="1" bodyfile="src/semsim/Query.cpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1a3a2aaf63f0a7f463f30b5b61011f91ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool semsim::Query::isBoolean</definition>
        <argsstring>()</argsstring>
        <name>isBoolean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if librdf_query_results is boolean format.</para><para>If this function returns true, the result can be retrieved by librdf_query_results_get_boolean().</para><para>Return value: non-0 if true </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="85" column="1" bodyfile="src/semsim/Query.cpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1a0cb8cbd4fa31055859103cbb68818b81" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int semsim::Query::getBoolean</definition>
        <argsstring>()</argsstring>
        <name>getBoolean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get boolean query result.</para><para>The return value is only meaningful if this is a boolean query result - see librdf_query_results_is_boolean()</para><para>Return value: boolean query result - &gt;0 is true, 0 is false, &lt;0 on error or finished </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="95" column="1" bodyfile="src/semsim/Query.cpp" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1adf86f1e46ab77299a9e02fb247ddc2a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int semsim::Query::getCount</definition>
        <argsstring>()</argsstring>
        <name>getCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>librdf_query_results_get_count: : #librdf_query_results query results</para><para>Get number of bindings so far.</para><para>Return value: number of bindings found so far </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="105" column="1" bodyfile="src/semsim/Query.cpp" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1Query_1a8aab71864507f3f0405fe9615e79057b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string semsim::Query::getBindingsName</definition>
        <argsstring>(int index)</argsstring>
        <name>getBindingsName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>: #librdf_query_results query results : offset of binding name into array of known names</para><para>Get binding name for the current result.</para><para>Return value: a pointer to a shared copy of the binding name or NULL on failure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/Query.h" line="116" column="1" bodyfile="src/semsim/Query.cpp" bodystart="188" bodyend="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/semsim/Query.h" line="45" column="1" bodyfile="src/semsim/Query.h" bodystart="45" bodyend="241"/>
    <listofallmembers>
      <member refid="classsemsim_1_1Query_1a8b74d77f2c4fbcd9800548aa4c4304ec" prot="public" virt="non-virtual"><scope>semsim::Query</scope><name>freeQuery</name></member>
      <member refid="classsemsim_1_1Query_1a93f2a6b862e823f26858653e0f46bfde" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>getBindingsCount</name></member>
      <member refid="classsemsim_1_1Query_1a8aab71864507f3f0405fe9615e79057b" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>getBindingsName</name></member>
      <member refid="classsemsim_1_1Query_1ad35d4b5e684f5b0b31579eba3afa049f" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>getBindingValueByName</name></member>
      <member refid="classsemsim_1_1Query_1a0cb8cbd4fa31055859103cbb68818b81" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>getBoolean</name></member>
      <member refid="classsemsim_1_1Query_1adf86f1e46ab77299a9e02fb247ddc2a0" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>getCount</name></member>
      <member refid="classsemsim_1_1Query_1aba1cba0d60d9618d4d8ef45f627d3f0c" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>isBindings</name></member>
      <member refid="classsemsim_1_1Query_1a3a2aaf63f0a7f463f30b5b61011f91ac" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>isBoolean</name></member>
      <member refid="classsemsim_1_1Query_1a290bfc078cc098987cf35f6fbf105bbc" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>model_</name></member>
      <member refid="classsemsim_1_1Query_1a455b614c839f1dabbb3f1c04c9a7a700" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>next</name></member>
      <member refid="classsemsim_1_1Query_1ae76fa75112392cfdc176c7a7ee6912f2" prot="public" virt="non-virtual"><scope>semsim::Query</scope><name>operator=</name></member>
      <member refid="classsemsim_1_1Query_1a3b7646a5d2722ff4d1962c3f0a620882" prot="public" virt="non-virtual"><scope>semsim::Query</scope><name>operator=</name></member>
      <member refid="classsemsim_1_1Query_1a8bf6ebf97259a7d9016a11b50c193930" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>q_</name></member>
      <member refid="classsemsim_1_1Query_1adc98ca404ecad9f4fd4f718c92721211" prot="public" virt="non-virtual"><scope>semsim::Query</scope><name>Query</name></member>
      <member refid="classsemsim_1_1Query_1a16a28232cd8bf950b1e76e017ec93561" prot="public" virt="non-virtual"><scope>semsim::Query</scope><name>Query</name></member>
      <member refid="classsemsim_1_1Query_1a1edd5ec1cd5cb057121fa0b35fad48ec" prot="public" virt="non-virtual"><scope>semsim::Query</scope><name>Query</name></member>
      <member refid="classsemsim_1_1Query_1a053a23e5668c3ba822ff10e71ce56c06" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>query_</name></member>
      <member refid="classsemsim_1_1Query_1a4ed853584d4c34e1785d6d4cace71db3" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>query_results_</name></member>
      <member refid="classsemsim_1_1Query_1a83580c1b66d2d052696dd907e8594a8a" prot="public" virt="non-virtual"><scope>semsim::Query</scope><name>resultsAsLibRdfStream</name></member>
      <member refid="classsemsim_1_1Query_1a16b43e8d44b25e0d1fba34c73c5386dc" prot="public" virt="non-virtual"><scope>semsim::Query</scope><name>resultsAsMap</name></member>
      <member refid="classsemsim_1_1Query_1ae44b7aff3ae00151f63cc3a355705091" prot="public" virt="non-virtual"><scope>semsim::Query</scope><name>resultsAsStr</name></member>
      <member refid="classsemsim_1_1Query_1ad629d8d9265fdc07dc88a698de69f2d9" prot="public" virt="non-virtual"><scope>semsim::Query</scope><name>runQuery</name></member>
      <member refid="classsemsim_1_1Query_1a54fb3eea8c246422856d12479c772c4c" prot="private" virt="non-virtual"><scope>semsim::Query</scope><name>valid_output_formats_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
