<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsemsim_1_1PhysicalProcess" kind="class" language="C++" prot="public">
    <compoundname>semsim::PhysicalProcess</compoundname>
    <basecompoundref refid="classsemsim_1_1PhysicalPhenomenon" prot="public" virt="non-virtual">semsim::PhysicalPhenomenon</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsemsim_1_1PhysicalProcess_1acceb3e9ac24b9c1750cd81a2d83e7cc4" prot="private" static="no" mutable="no">
        <type>Sources</type>
        <definition>Sources semsim::PhysicalProcess::sources_</definition>
        <argsstring></argsstring>
        <name>sources_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="22" column="1" bodyfile="src/semsim/PhysicalProcess.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsemsim_1_1PhysicalProcess_1a25b1682cd8bd1406c392c885ccb51076" prot="private" static="no" mutable="no">
        <type>Sinks</type>
        <definition>Sinks semsim::PhysicalProcess::sinks_</definition>
        <argsstring></argsstring>
        <name>sinks_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="23" column="1" bodyfile="src/semsim/PhysicalProcess.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsemsim_1_1PhysicalProcess_1aa338a974eeba0e920702578e890af0fe" prot="private" static="no" mutable="no">
        <type>Mediators</type>
        <definition>Mediators semsim::PhysicalProcess::mediators_</definition>
        <argsstring></argsstring>
        <name>mediators_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="24" column="1" bodyfile="src/semsim/PhysicalProcess.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a9dfb55f4f3b08c9be6ba6f0cf28f08b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::PhysicalProcess::PhysicalProcess</definition>
        <argsstring>()=delete</argsstring>
        <name>PhysicalProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a5cd7a9f9910e5970210592f99c3daace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::PhysicalProcess::~PhysicalProcess</definition>
        <argsstring>()=default</argsstring>
        <name>~PhysicalProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1ae000179654944f3e35b20485d2f0adf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::PhysicalProcess::PhysicalProcess</definition>
        <argsstring>(librdf_model *model, Subject metaid, PhysicalPropertyResource physicalProperty, Sources sources, Sinks sinks, Mediators mediators)</argsstring>
        <name>PhysicalProcess</name>
        <param>
          <type>librdf_model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="classsemsim_1_1Subject" kindref="compound">Subject</ref></type>
          <declname>metaid</declname>
        </param>
        <param>
          <type><ref refid="classsemsim_1_1PhysicalPropertyResource" kindref="compound">PhysicalPropertyResource</ref></type>
          <declname>physicalProperty</declname>
        </param>
        <param>
          <type>Sources</type>
          <declname>sources</declname>
        </param>
        <param>
          <type>Sinks</type>
          <declname>sinks</declname>
        </param>
        <param>
          <type>Mediators</type>
          <declname>mediators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="42" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="14" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1abe6be94626981d15e27615e040fdda2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void semsim::PhysicalProcess::free</definition>
        <argsstring>() override</argsstring>
        <name>free</name>
        <reimplements refid="classsemsim_1_1PhysicalPhenomenon_1aeaf66bcc989cb6b736a8611903ab7b74">free</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="55" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="148" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1aaf6d4c0263198fc9355ca4d74221f35d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::PhysicalProcess::PhysicalProcess</definition>
        <argsstring>(librdf_model *model)</argsstring>
        <name>PhysicalProcess</name>
        <param>
          <type>librdf_model *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="61" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a6d3ea622c0f1fa642068b1b7e76385e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Sources &amp;</type>
        <definition>const std::vector&lt; SourceParticipant &gt; &amp; semsim::PhysicalProcess::getSources</definition>
        <argsstring>() const</argsstring>
        <name>getSources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="67" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1aa7ec750398cf738c374c9e92c0bb5670" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Sinks &amp;</type>
        <definition>const std::vector&lt; SinkParticipant &gt; &amp; semsim::PhysicalProcess::getSinks</definition>
        <argsstring>() const</argsstring>
        <name>getSinks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="73" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a127806bf74ec1e31514c6f3d659824b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Mediators &amp;</type>
        <definition>const std::vector&lt; MediatorParticipant &gt; &amp; semsim::PhysicalProcess::getMediators</definition>
        <argsstring>() const</argsstring>
        <name>getMediators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="79" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a90d27a6f08b58a7917da00dfbfb5ff72" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsemsim_1_1Triples" kindref="compound">Triples</ref></type>
        <definition>Triples semsim::PhysicalProcess::toTriples</definition>
        <argsstring>() override</argsstring>
        <name>toTriples</name>
        <reimplements refid="classsemsim_1_1PhysicalPhenomenon_1ac6857e2bf2a550c3f52037d3e74191c9">toTriples</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="89" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="38" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a1caf11364214c1f0e379729e92333208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> &amp;</type>
        <definition>PhysicalProcess &amp; semsim::PhysicalProcess::setAbout</definition>
        <argsstring>(std::string metaid)</argsstring>
        <name>setAbout</name>
        <param>
          <type>std::string</type>
          <declname>metaid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="95" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a5b0b6e6d5eba493fed10759497057f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> &amp;</type>
        <definition>PhysicalProcess &amp; semsim::PhysicalProcess::setPhysicalProperty</definition>
        <argsstring>(const std::string &amp;physicalProperty)</argsstring>
        <name>setPhysicalProperty</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>physicalProperty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="101" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1ad5015bd89fef10553e03f0f6b4b13085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> &amp;</type>
        <definition>PhysicalProcess &amp; semsim::PhysicalProcess::setPhysicalProperty</definition>
        <argsstring>(PhysicalPropertyResource physicalProperty)</argsstring>
        <name>setPhysicalProperty</name>
        <param>
          <type><ref refid="classsemsim_1_1PhysicalPropertyResource" kindref="compound">PhysicalPropertyResource</ref></type>
          <declname>physicalProperty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="110" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a28eeb2d8344664a842b725249bea7dec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> &amp;</type>
        <definition>PhysicalProcess &amp; semsim::PhysicalProcess::addSource</definition>
        <argsstring>(std::string source_metaid, double multiplier, std::string physical_entity_reference)</argsstring>
        <name>addSource</name>
        <param>
          <type>std::string</type>
          <declname>source_metaid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>multiplier</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>physical_entity_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="116" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="97" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a88c77abfb77d9a006da62fd0c0730007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> &amp;</type>
        <definition>PhysicalProcess &amp; semsim::PhysicalProcess::addSink</definition>
        <argsstring>(std::string sink_metaid, double multiplier, std::string physical_entity_reference)</argsstring>
        <name>addSink</name>
        <param>
          <type>std::string</type>
          <declname>sink_metaid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>multiplier</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>physical_entity_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="122" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="110" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a798bda68e6b2fb7940e3400b003c1d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> &amp;</type>
        <definition>PhysicalProcess &amp; semsim::PhysicalProcess::addMediator</definition>
        <argsstring>(std::string mediator_metaid, double multiplier, std::string physical_entity_reference)</argsstring>
        <name>addMediator</name>
        <param>
          <type>std::string</type>
          <declname>mediator_metaid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>multiplier</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>physical_entity_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="128" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="123" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a07fa014685889073952834086b3a74a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int semsim::PhysicalProcess::getNumSources</definition>
        <argsstring>()</argsstring>
        <name>getNumSources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="135" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a66d037746715d730964329cccc5e68ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int semsim::PhysicalProcess::getNumSinks</definition>
        <argsstring>()</argsstring>
        <name>getNumSinks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="141" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1PhysicalProcess_1a6223cd90d08c19c4c81f4c72ffb1379b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int semsim::PhysicalProcess::getNumMediators</definition>
        <argsstring>()</argsstring>
        <name>getNumMediators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/PhysicalProcess.h" line="147" column="1" bodyfile="src/semsim/PhysicalProcess.cpp" bodystart="144" bodyend="146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="139">
        <label>semsim::PhysicalPhenomenon</label>
        <link refid="classsemsim_1_1PhysicalPhenomenon"/>
      </node>
      <node id="138">
        <label>semsim::PhysicalProcess</label>
        <link refid="classsemsim_1_1PhysicalProcess"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="142">
        <label>semsim::Subject</label>
        <link refid="classsemsim_1_1Subject"/>
      </node>
      <node id="141">
        <label>semsim::PhysicalPhenomenon</label>
        <link refid="classsemsim_1_1PhysicalPhenomenon"/>
        <childnode refid="142" relation="usage">
          <edgelabel>about</edgelabel>
        </childnode>
        <childnode refid="143" relation="usage">
          <edgelabel>physical_property_</edgelabel>
        </childnode>
      </node>
      <node id="140">
        <label>semsim::PhysicalProcess</label>
        <link refid="classsemsim_1_1PhysicalProcess"/>
        <childnode refid="141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>semsim::Resource</label>
        <link refid="classsemsim_1_1Resource"/>
      </node>
      <node id="143">
        <label>semsim::PhysicalPropertyResource</label>
        <link refid="classsemsim_1_1PhysicalPropertyResource"/>
        <childnode refid="144" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/semsim/PhysicalProcess.h" line="20" column="1" bodyfile="src/semsim/PhysicalProcess.h" bodystart="20" bodyend="148"/>
    <listofallmembers>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1aa43a5f6719a6d44d4b96081b2f2622fe" prot="protected" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>about</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a798bda68e6b2fb7940e3400b003c1d7d" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>addMediator</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a88c77abfb77d9a006da62fd0c0730007" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>addSink</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a28eeb2d8344664a842b725249bea7dec" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>addSource</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1abe6be94626981d15e27615e040fdda2f" prot="public" virt="virtual"><scope>semsim::PhysicalProcess</scope><name>free</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1a930e9d0f75ec3a7bdbcb2dbce1a47716" prot="protected" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>generateMetaId</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1af3a680b3bacba8733eab51207fa8e223" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>getAbout</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a127806bf74ec1e31514c6f3d659824b3" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>getMediators</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a6223cd90d08c19c4c81f4c72ffb1379b" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>getNumMediators</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a66d037746715d730964329cccc5e68ba" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>getNumSinks</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a07fa014685889073952834086b3a74a4" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>getNumSources</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1ac0b9bb899a6bd02275b5b4d106f875ea" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>getPhysicalProperty</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1aa7ec750398cf738c374c9e92c0bb5670" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>getSinks</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a6d3ea622c0f1fa642068b1b7e76385e5" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>getSources</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1ae56630b175214b2196da1bf47a3c47c0" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>getSubject</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1a3fc27dfe9bedd3055c575e134c537d6e" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>getType</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1aa338a974eeba0e920702578e890af0fe" prot="private" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>mediators_</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1a8a9e00b125ff439cd257f5c58dff68db" prot="protected" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>model_</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1a9880b73feb880ebde54cb43dcd10645f" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>operator=</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1a173a2f18b7808fbdcf21317bc80088b5" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>operator=</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1a264d752c356d2c6011da6d3cd1494418" prot="protected" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>physical_property_</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1afaac9a2ba2c452e9ae4f8e6737132166" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>PhysicalPhenomenon</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1ae0eb39856d1d847118dc14d8f6cdbe88" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>PhysicalPhenomenon</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1a5c96bf803ad7ed4b675f58ec3b28ae83" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>PhysicalPhenomenon</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1a27f402b88ef569543730317fc9662c4c" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>PhysicalPhenomenon</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1aab6825374a350a0fa83c4a54704ebfbc" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>PhysicalPhenomenon</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a9dfb55f4f3b08c9be6ba6f0cf28f08b2" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>PhysicalProcess</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1ae000179654944f3e35b20485d2f0adf0" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>PhysicalProcess</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1aaf6d4c0263198fc9355ca4d74221f35d" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>PhysicalProcess</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a1caf11364214c1f0e379729e92333208" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>setAbout</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a5b0b6e6d5eba493fed10759497057f1b" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>setPhysicalProperty</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1ad5015bd89fef10553e03f0f6b4b13085" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>setPhysicalProperty</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a25b1682cd8bd1406c392c885ccb51076" prot="private" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>sinks_</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1acceb3e9ac24b9c1750cd81a2d83e7cc4" prot="private" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>sources_</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a90d27a6f08b58a7917da00dfbfb5ff72" prot="public" virt="virtual"><scope>semsim::PhysicalProcess</scope><name>toTriples</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1ad18e38168bcec1925e6bd9ed08494614" prot="protected" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>type_</name></member>
      <member refid="classsemsim_1_1PhysicalPhenomenon_1a7df3a2d187ae80aead291641ef578dcc" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>~PhysicalPhenomenon</name></member>
      <member refid="classsemsim_1_1PhysicalProcess_1a5cd7a9f9910e5970210592f99c3daace" prot="public" virt="non-virtual"><scope>semsim::PhysicalProcess</scope><name>~PhysicalProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
