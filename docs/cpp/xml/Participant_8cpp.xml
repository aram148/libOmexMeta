<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Participant_8cpp" kind="file" language="C++">
    <compoundname>Participant.cpp</compoundname>
    <includes refid="Participant_8h" local="yes">Participant.h</includes>
    <includes local="no">utility</includes>
    <incdepgraph>
      <node id="891">
        <label>sys/stat.h</label>
      </node>
      <node id="853">
        <label>src/semsim/Participant.cpp</label>
        <link refid="Participant_8cpp"/>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="865">
        <label>World.h</label>
        <link refid="World_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
      </node>
      <node id="895">
        <label>Triples.h</label>
        <link refid="Triples_8h_source"/>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
      </node>
      <node id="883">
        <label>RaptorIOStream.h</label>
        <link refid="RaptorIOStream_8h_source"/>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
      </node>
      <node id="875">
        <label>semsim/Query.h</label>
        <link refid="Query_8h_source"/>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="889">
        <label>stdexcept</label>
      </node>
      <node id="885">
        <label>LibrdfParser.h</label>
        <link refid="LibrdfParser_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
      </node>
      <node id="856">
        <label>string</label>
      </node>
      <node id="867">
        <label>regex</label>
      </node>
      <node id="870">
        <label>semsim/Error.h</label>
        <link refid="Error_8h_source"/>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
      </node>
      <node id="864">
        <label>exception</label>
      </node>
      <node id="890">
        <label>semsim/MetaID.h</label>
        <link refid="MetaID_8h_source"/>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
      </node>
      <node id="893">
        <label>ostream</label>
      </node>
      <node id="888">
        <label>curl/curl.h</label>
      </node>
      <node id="857">
        <label>semsim/Resource.h</label>
        <link refid="Resource_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
      </node>
      <node id="877">
        <label>LibrdfStorage.h</label>
        <link refid="LibrdfStorage_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
      </node>
      <node id="874">
        <label>semsim/SemsimUtils.h</label>
        <link refid="SemsimUtils_8h_source"/>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
      </node>
      <node id="871">
        <label>Triple.h</label>
        <link refid="Triple_8h_source"/>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="859" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
      </node>
      <node id="854">
        <label>Participant.h</label>
        <link refid="Participant_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="868">
        <label>vector</label>
      </node>
      <node id="869">
        <label>Subject.h</label>
        <link refid="Subject_8h_source"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
      </node>
      <node id="884">
        <label>utility</label>
      </node>
      <node id="861">
        <label>sstream</label>
      </node>
      <node id="873">
        <label>semsim/Predicate.h</label>
        <link refid="Predicate_8h_source"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="863">
        <label>LibrdfException.h</label>
        <link refid="LibrdfException_8h_source"/>
        <childnode refid="864" relation="include">
        </childnode>
      </node>
      <node id="858">
        <label>LibrdfNode.h</label>
        <link refid="LibrdfNode_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="859" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
      </node>
      <node id="866">
        <label>iostream</label>
      </node>
      <node id="887">
        <label>semsim/CurlGet.h</label>
        <link refid="CurlGet_8h_source"/>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
      </node>
      <node id="859">
        <label>raptor2.h</label>
      </node>
      <node id="880">
        <label>LibrdfQuery.h</label>
        <link refid="LibrdfQuery_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
      </node>
      <node id="886">
        <label>unordered_map</label>
      </node>
      <node id="876">
        <label>RedlandAPIWrapper.h</label>
        <link refid="RedlandAPIWrapper_8h_source"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
      </node>
      <node id="879">
        <label>LibrdfQueryResults.h</label>
        <link refid="LibrdfQueryResults_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
      </node>
      <node id="862">
        <label>LibrdfUri.h</label>
        <link refid="LibrdfUri_8h_source"/>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
      </node>
      <node id="872">
        <label>LibrdfStatement.h</label>
        <link refid="LibrdfStatement_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
      </node>
      <node id="855">
        <label>librdf.h</label>
      </node>
      <node id="878">
        <label>LibrdfModel.h</label>
        <link refid="LibrdfModel_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
      </node>
      <node id="892">
        <label>algorithm</label>
      </node>
      <node id="881">
        <label>LibrdfStream.h</label>
        <link refid="LibrdfStream_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
      </node>
      <node id="894">
        <label>cstring</label>
      </node>
      <node id="860">
        <label>memory</label>
      </node>
      <node id="882">
        <label>LibrdfSerializer.h</label>
        <link refid="LibrdfSerializer_8h_source"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacesemsim">semsim</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Ciaran<sp/>on<sp/>4/20/2020.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Participant.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesemsim" kindref="compound">semsim</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>Participant::Participant(librdf_model*<sp/>model,<sp/>std::string<sp/>subject,<sp/>std::string<sp/>semsim_predicate_term,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multiplier,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>physicalEntityReference)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>model_(model),<sp/>subject_(std::move(subject)),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semsim_predicate_term_(SemSim(semsim_predicate_term)),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier_(multiplier),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicalEntityReference_(std::move(physicalEntityReference))<sp/>{}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>Triples<sp/>Participant::toTriples(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;process_metaid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Triples<sp/>triples;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>source<sp/>participant<sp/>triple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triples.emplace_back(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibrdfNode::fromUriString(process_metaid).</highlight><highlight class="keyword">get</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semsim_predicate_term_.getNode(),<sp/></highlight><highlight class="comment">//term<sp/>is<sp/>hasSourceParticipant<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibrdfNode::fromUriString(subject_).get()</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triples.emplace_back(</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibrdfNode::fromUriString(subject_).</highlight><highlight class="keyword">get</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SemSim(</highlight><highlight class="stringliteral">&quot;hasPhysicalEntityReference&quot;</highlight><highlight class="normal">).getNode(),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibrdfNode::fromUriString(physicalEntityReference_).</highlight><highlight class="keyword">get</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Resource::fromRawPtr().getNode()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multiplier_<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>multiplier_os;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier_os<sp/>&lt;&lt;<sp/>multiplier_;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triples.emplace_back(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibrdfNode::fromUriString(subject_).</highlight><highlight class="keyword">get</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SemSim(</highlight><highlight class="stringliteral">&quot;hasMultiplier&quot;</highlight><highlight class="normal">).getNode(),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibrdfNode::fromLiteral(</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier_os.str(),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;http://www.w3.org/2001/XMLSchema#double&quot;</highlight><highlight class="normal">).</highlight><highlight class="keyword">get</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>triples;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>SemSim<sp/>Participant::getPredicate()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>semsim_predicate_term_;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Participant::setPredicate(std::string<sp/>semsim_predicate_term)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semsim_predicate_term_<sp/>=<sp/>SemSim(semsim_predicate_term);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;Participant::getSubject()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subject_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Participant::getMultiplier()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>multiplier_;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;Participant::getPhysicalEntityReference()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>physicalEntityReference_;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Participant::free()<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(semsim_predicate_term_.getNode())<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semsim_predicate_term_.freeNode();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semsim_predicate_term_.setNode(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Participant::~Participant()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(predicate_ptr_-&gt;getNode())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibrdfNode::free(predicate_ptr_-&gt;getNode());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicate_ptr_<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>SourceParticipant::SourceParticipant(librdf_model*<sp/>model,<sp/>std::string<sp/>subject,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multiplier,<sp/>std::string<sp/>physicalEntityReference)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Participant(model,<sp/>std::move(subject),<sp/></highlight><highlight class="stringliteral">&quot;hasSourceParticipant&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier,<sp/>std::move(physicalEntityReference))<sp/>{}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>SinkParticipant::SinkParticipant(librdf_model*<sp/>model,<sp/>std::string<sp/>subject,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multiplier,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>physicalEntityReference)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Participant(model,<sp/>std::move(subject),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hasSinkParticipant&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(physicalEntityReference))<sp/>{}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>MediatorParticipant::MediatorParticipant(</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>librdf_model*<sp/>model,<sp/>std::string<sp/>subject,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>physicalEntityReference)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Participant(model,<sp/>std::move(subject),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hasMediatorParticipant&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>std::move(physicalEntityReference))<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/semsim/Participant.cpp"/>
  </compounddef>
</doxygen>
