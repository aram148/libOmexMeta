<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsemsim_1_1RDF" kind="class" language="C++" prot="public">
    <compoundname>semsim::RDF</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classsemsim_1_1RDF_1adf411eb5671b11defb9b2f340e0e7750" prot="private" static="no">
        <type>std::unordered_map&lt; std::string, std::string &gt;</type>
        <definition>typedef std::unordered_map&lt;std::string, std::string&gt; semsim::RDF::NamespaceMap</definition>
        <argsstring></argsstring>
        <name>NamespaceMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="22" column="1" bodyfile="src/semsim/RDF.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsemsim_1_1RDF_1a9e2b4cb98d847d63969556f599036e7b" prot="private" static="no" mutable="no">
        <type><ref refid="classredland_1_1LibrdfStorage" kindref="compound">LibrdfStorage</ref></type>
        <definition>LibrdfStorage semsim::RDF::storage_</definition>
        <argsstring></argsstring>
        <name>storage_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="19" column="1" bodyfile="src/semsim/RDF.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsemsim_1_1RDF_1a9bb107970ce084e0a156f79fc7e4d515" prot="private" static="no" mutable="no">
        <type><ref refid="classredland_1_1LibrdfModel" kindref="compound">LibrdfModel</ref></type>
        <definition>LibrdfModel semsim::RDF::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="20" column="1" bodyfile="src/semsim/RDF.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsemsim_1_1RDF_1a03a6df29bae51bba853a11d5eb433835" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string semsim::RDF::base_uri_</definition>
        <argsstring></argsstring>
        <name>base_uri_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="25" column="1" bodyfile="src/semsim/RDF.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsemsim_1_1RDF_1a106ee70106beb1c1304c8968470f3033" prot="public" static="no" mutable="no">
        <type>NamespaceMap</type>
        <definition>NamespaceMap semsim::RDF::namespaces_</definition>
        <argsstring></argsstring>
        <name>namespaces_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="26" column="1" bodyfile="src/semsim/RDF.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsemsim_1_1RDF_1af3bbb4dc4ce350bf60fc6a94bffd41b2" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; semsim::RDF::seen_namespaces_</definition>
        <argsstring></argsstring>
        <name>seen_namespaces_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="27" column="1" bodyfile="src/semsim/RDF.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsemsim_1_1RDF_1a9a2f19c41f10c772cb4dece71c473bd2" prot="public" static="no" mutable="no">
        <type>NamespaceMap</type>
        <definition>NamespaceMap semsim::RDF::default_namespaces_</definition>
        <argsstring></argsstring>
        <name>default_namespaces_</name>
        <initializer>= {
                {&quot;http://purl.org/dc/terms/&quot;,                &quot;dcterms&quot;},
                {&quot;http://biomodels.net/biology-qualifiers/&quot;, &quot;bqbiol&quot;},
                {&quot;http://biomodels.net/model-qualifiers/&quot;,   &quot;bqmodel&quot;},
                {&quot;http://www.bhi.washington.edu/semsim#&quot;,    &quot;semsim&quot;},
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="31" column="1" bodyfile="src/semsim/RDF.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsemsim_1_1RDF_1adb3d644393c659dc3cd54b29d6bfaec0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::RDF::RDF</definition>
        <argsstring>(const std::string &amp;base_uri=&quot;./Annotations.rdf&quot;, const std::string &amp;storage_type=&quot;memory&quot;, const std::string &amp;storage_name=&quot;SemsimStore&quot;, const char *storage_options=nullptr, const char *model_options=nullptr)</argsstring>
        <name>RDF</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>base_uri</declname>
          <defval>&quot;./Annotations.rdf&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>storage_type</declname>
          <defval>&quot;memory&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>storage_name</declname>
          <defval>&quot;SemsimStore&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>storage_options</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>model_options</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="38" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="13" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1aefd8c1ee16d47a49ce3e2828b7671866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::RDF::freeRDF</definition>
        <argsstring>()</argsstring>
        <name>freeRDF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="42" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a0ce6ebf263525341083b6850bd65dee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::RDF::~RDF</definition>
        <argsstring>()</argsstring>
        <name>~RDF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="44" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a1d640ed0ead4d4699c59641a32f6a81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::RDF::RDF</definition>
        <argsstring>(const RDF &amp;rdf)=delete</argsstring>
        <name>RDF</name>
        <param>
          <type>const <ref refid="classsemsim_1_1RDF" kindref="compound">RDF</ref> &amp;</type>
          <declname>rdf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1ad6e8d742af0aff97c89746a8eaf50777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>semsim::RDF::RDF</definition>
        <argsstring>(RDF &amp;&amp;rdf) noexcept</argsstring>
        <name>RDF</name>
        <param>
          <type><ref refid="classsemsim_1_1RDF" kindref="compound">RDF</ref> &amp;&amp;</type>
          <declname>rdf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="48" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="32" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a6a8c2040f0fb2be58380d09ff396f11e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1RDF" kindref="compound">RDF</ref> &amp;</type>
        <definition>RDF&amp; semsim::RDF::operator=</definition>
        <argsstring>(const RDF &amp;rdf)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsemsim_1_1RDF" kindref="compound">RDF</ref> &amp;</type>
          <declname>rdf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a0195811b138d141d7944ed475b098189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1RDF" kindref="compound">RDF</ref> &amp;</type>
        <definition>RDF &amp; semsim::RDF::operator=</definition>
        <argsstring>(RDF &amp;&amp;rdf) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsemsim_1_1RDF" kindref="compound">RDF</ref> &amp;&amp;</type>
          <declname>rdf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="52" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="41" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1aec42881cdaeeaffdc91238f03a1db2e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int semsim::RDF::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="54" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a6bbd8747ca3893339162bbb00e9f428f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::RDF::setBaseUri</definition>
        <argsstring>(std::string baseUri)</argsstring>
        <name>setBaseUri</name>
        <param>
          <type>std::string</type>
          <declname>baseUri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="56" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1ac90c8d0c73127e851825e1426ce9622e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool semsim::RDF::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="58" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a3a920ea30103f06343d4714987a2b765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::RDF::addFromString</definition>
        <argsstring>(const std::string &amp;str, const std::string &amp;format=&quot;guess&quot;, const std::string &amp;base_uri=std::string())</argsstring>
        <name>addFromString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>format</declname>
          <defval>&quot;guess&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>base_uri</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="79" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="106" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a27497273858cca1463a612f92f332da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::RDF::addFromUri</definition>
        <argsstring>(const std::string &amp;uri_string, const std::string &amp;format=&quot;guess&quot;)</argsstring>
        <name>addFromUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>format</declname>
          <defval>&quot;guess&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="99" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a8cd65868da05f409c37b91acdbf33aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::RDF::addFromFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;format)</argsstring>
        <name>addFromFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="116" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a493ffd6ebc12adc6c668f04f21ce2380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, std::string &gt;</type>
        <definition>std::unordered_map&lt; std::string, std::string &gt; semsim::RDF::propagateNamespacesFromParser</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;seen_namespaces)</argsstring>
        <name>propagateNamespacesFromParser</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>seen_namespaces</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="139" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="179" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a762cc1d30484cd95b130526e2fab9ef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string semsim::RDF::toString</definition>
        <argsstring>(const std::string &amp;format=&quot;rdfxml-abbrev&quot;, std::string base_uri=std::string(), const char *mime_type=nullptr, const char *type_uri=nullptr)</argsstring>
        <name>toString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>format</declname>
          <defval>&quot;rdfxml-abbrev&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>base_uri</declname>
          <defval>std::string()</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>mime_type</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>type_uri</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="141" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="190" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1acf46cf3b2dbfa5828dac1e823cf972c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1Editor" kindref="compound">Editor</ref></type>
        <definition>Editor semsim::RDF::toEditor</definition>
        <argsstring>(const std::string &amp;xml, SemsimXmlType type)</argsstring>
        <name>toEditor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>SemsimXmlType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="144" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a1f6a4f82d01c93be36eb5c986c1629bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1Editor" kindref="compound">Editor</ref> *</type>
        <definition>Editor * semsim::RDF::toEditorPtr</definition>
        <argsstring>(const std::string &amp;xml, SemsimXmlType type)</argsstring>
        <name>toEditorPtr</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>SemsimXmlType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="146" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1ac8286394b938d0511e7ccbf81583277c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>librdf_model *</type>
        <definition>librdf_model * semsim::RDF::getModel</definition>
        <argsstring>() const</argsstring>
        <name>getModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="148" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a92ace04b947ccd8c7c3c90a4d9d77edb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>librdf_storage *</type>
        <definition>librdf_storage * semsim::RDF::getStorage</definition>
        <argsstring>() const</argsstring>
        <name>getStorage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="150" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="214" bodyend="216"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsemsim_1_1RDF_1a77782a3756ed6243ee9b842c6b0f06b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1RDF" kindref="compound">RDF</ref></type>
        <definition>RDF semsim::RDF::fromString</definition>
        <argsstring>(const std::string &amp;str, const std::string &amp;format=&quot;guess&quot;, const std::string &amp;base_uri=std::string())</argsstring>
        <name>fromString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>format</declname>
          <defval>&quot;guess&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>base_uri</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="71" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="64" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1a3d14028f5953a4e007cfe8f9a34b3e0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1RDF" kindref="compound">RDF</ref></type>
        <definition>RDF semsim::RDF::fromUri</definition>
        <argsstring>(const std::string &amp;uri_string, const std::string &amp;format=&quot;guess&quot;)</argsstring>
        <name>fromUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>format</declname>
          <defval>&quot;guess&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="91" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="141" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1ab5f969412a37a4ecad5f8485177ae561" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsemsim_1_1RDF" kindref="compound">RDF</ref></type>
        <definition>RDF semsim::RDF::fromFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;format)</argsstring>
        <name>fromFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="108" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classsemsim_1_1RDF_1ab1c83f13027f0946d08dd21368706f3b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semsim::RDF::fromString</definition>
        <argsstring>(RDF *rdf, const std::string &amp;str, const std::string &amp;format, const std::string &amp;base_uri)</argsstring>
        <name>fromString</name>
        <param>
          <type><ref refid="classsemsim_1_1RDF" kindref="compound">RDF</ref> *</type>
          <declname>rdf</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>base_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/semsim/RDF.h" line="129" column="1" bodyfile="src/semsim/RDF.cpp" bodystart="88" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/semsim/RDF.h" line="18" column="1" bodyfile="src/semsim/RDF.h" bodystart="18" bodyend="152"/>
    <listofallmembers>
      <member refid="classsemsim_1_1RDF_1a8cd65868da05f409c37b91acdbf33aa0" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>addFromFile</name></member>
      <member refid="classsemsim_1_1RDF_1a3a920ea30103f06343d4714987a2b765" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>addFromString</name></member>
      <member refid="classsemsim_1_1RDF_1a27497273858cca1463a612f92f332da1" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>addFromUri</name></member>
      <member refid="classsemsim_1_1RDF_1a03a6df29bae51bba853a11d5eb433835" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>base_uri_</name></member>
      <member refid="classsemsim_1_1RDF_1a9a2f19c41f10c772cb4dece71c473bd2" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>default_namespaces_</name></member>
      <member refid="classsemsim_1_1RDF_1ac90c8d0c73127e851825e1426ce9622e" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>empty</name></member>
      <member refid="classsemsim_1_1RDF_1aefd8c1ee16d47a49ce3e2828b7671866" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>freeRDF</name></member>
      <member refid="classsemsim_1_1RDF_1ab5f969412a37a4ecad5f8485177ae561" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>fromFile</name></member>
      <member refid="classsemsim_1_1RDF_1a77782a3756ed6243ee9b842c6b0f06b8" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>fromString</name></member>
      <member refid="classsemsim_1_1RDF_1ab1c83f13027f0946d08dd21368706f3b" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>fromString</name></member>
      <member refid="classsemsim_1_1RDF_1a3d14028f5953a4e007cfe8f9a34b3e0d" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>fromUri</name></member>
      <member refid="classsemsim_1_1RDF_1ac8286394b938d0511e7ccbf81583277c" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>getModel</name></member>
      <member refid="classsemsim_1_1RDF_1a92ace04b947ccd8c7c3c90a4d9d77edb" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>getStorage</name></member>
      <member refid="classsemsim_1_1RDF_1a9bb107970ce084e0a156f79fc7e4d515" prot="private" virt="non-virtual"><scope>semsim::RDF</scope><name>model_</name></member>
      <member refid="classsemsim_1_1RDF_1adf411eb5671b11defb9b2f340e0e7750" prot="private" virt="non-virtual"><scope>semsim::RDF</scope><name>NamespaceMap</name></member>
      <member refid="classsemsim_1_1RDF_1a106ee70106beb1c1304c8968470f3033" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>namespaces_</name></member>
      <member refid="classsemsim_1_1RDF_1a6a8c2040f0fb2be58380d09ff396f11e" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>operator=</name></member>
      <member refid="classsemsim_1_1RDF_1a0195811b138d141d7944ed475b098189" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>operator=</name></member>
      <member refid="classsemsim_1_1RDF_1a493ffd6ebc12adc6c668f04f21ce2380" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>propagateNamespacesFromParser</name></member>
      <member refid="classsemsim_1_1RDF_1adb3d644393c659dc3cd54b29d6bfaec0" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>RDF</name></member>
      <member refid="classsemsim_1_1RDF_1a1d640ed0ead4d4699c59641a32f6a81a" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>RDF</name></member>
      <member refid="classsemsim_1_1RDF_1ad6e8d742af0aff97c89746a8eaf50777" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>RDF</name></member>
      <member refid="classsemsim_1_1RDF_1af3bbb4dc4ce350bf60fc6a94bffd41b2" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>seen_namespaces_</name></member>
      <member refid="classsemsim_1_1RDF_1a6bbd8747ca3893339162bbb00e9f428f" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>setBaseUri</name></member>
      <member refid="classsemsim_1_1RDF_1aec42881cdaeeaffdc91238f03a1db2e6" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>size</name></member>
      <member refid="classsemsim_1_1RDF_1a9e2b4cb98d847d63969556f599036e7b" prot="private" virt="non-virtual"><scope>semsim::RDF</scope><name>storage_</name></member>
      <member refid="classsemsim_1_1RDF_1acf46cf3b2dbfa5828dac1e823cf972c8" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>toEditor</name></member>
      <member refid="classsemsim_1_1RDF_1a1f6a4f82d01c93be36eb5c986c1629bc" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>toEditorPtr</name></member>
      <member refid="classsemsim_1_1RDF_1a762cc1d30484cd95b130526e2fab9ef3" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>toString</name></member>
      <member refid="classsemsim_1_1RDF_1a0ce6ebf263525341083b6850bd65dee1" prot="public" virt="non-virtual"><scope>semsim::RDF</scope><name>~RDF</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
