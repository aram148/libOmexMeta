<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="LibrdfNode_8h" kind="file" language="C++">
    <compoundname>LibrdfNode.h</compoundname>
    <includes local="no">librdf.h</includes>
    <includes local="no">raptor2.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">sstream</includes>
    <includes refid="LibrdfUri_8h" local="yes">LibrdfUri.h</includes>
    <includes refid="World_8h" local="yes">World.h</includes>
    <includes refid="LibrdfException_8h" local="yes">LibrdfException.h</includes>
    <includedby refid="Subject_8h" local="yes">src/semsim/Subject.h</includedby>
    <includedby refid="Triple_8h" local="yes">src/semsim/Triple.h</includedby>
    <includedby refid="Resource_8h" local="yes">src/semsim/Resource.h</includedby>
    <includedby refid="LibrdfStatement_8h" local="yes">src/redland/RedlandAPIWrapper/src/LibrdfStatement.h</includedby>
    <includedby refid="LibrdfNode_8cpp" local="yes">src/redland/RedlandAPIWrapper/src/LibrdfNode.cpp</includedby>
    <includedby refid="LibrdfParser_8h" local="yes">src/redland/RedlandAPIWrapper/src/LibrdfParser.h</includedby>
    <includedby refid="LibrdfSerializer_8h" local="yes">src/redland/RedlandAPIWrapper/src/LibrdfSerializer.h</includedby>
    <includedby refid="RedlandAPIWrapper_8h" local="yes">src/redland/RedlandAPIWrapper/src/RedlandAPIWrapper.h</includedby>
    <incdepgraph>
      <node id="108">
        <label>World.h</label>
        <link refid="World_8h_source"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>regex</label>
      </node>
      <node id="107">
        <label>exception</label>
      </node>
      <node id="104">
        <label>sstream</label>
      </node>
      <node id="106">
        <label>LibrdfException.h</label>
        <link refid="LibrdfException_8h_source"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>src/redland/RedlandAPIWrapper/src/LibrdfNode.h</label>
        <link refid="LibrdfNode_8h"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>iostream</label>
      </node>
      <node id="102">
        <label>raptor2.h</label>
      </node>
      <node id="105">
        <label>LibrdfUri.h</label>
        <link refid="LibrdfUri_8h_source"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>librdf.h</label>
      </node>
      <node id="103">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="122">
        <label>src/semsim/PhysicalEntity.h</label>
        <link refid="PhysicalEntity_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>src/semsim/PhysicalForce.h</label>
        <link refid="PhysicalForce_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>src/semsim/Triples.h</label>
        <link refid="Triples_8h_source"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>src/semsim/Query.h</label>
        <link refid="Query_8h_source"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>src/redland/RedlandAPIWrapper/src/LibrdfParser.h</label>
        <link refid="LibrdfParser_8h_source"/>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>src/semsim/PhysicalProcess.h</label>
        <link refid="PhysicalProcess_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>src/semsim/MetaID.h</label>
        <link refid="MetaID_8h_source"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>src/semsim/Resource.h</label>
        <link refid="Resource_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>src/semsim/SemsimCApi.h</label>
        <link refid="SemsimCApi_8h_source"/>
      </node>
      <node id="130">
        <label>src/semsim/SemsimUtils.h</label>
        <link refid="SemsimUtils_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>src/semsim/RDF.h</label>
        <link refid="RDF_8h_source"/>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>src/semsim/PhysicalPropertyResource.h</label>
        <link refid="PhysicalPropertyResource_8h_source"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>src/semsim/Triple.h</label>
        <link refid="Triple_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>src/semsim/Participant.h</label>
        <link refid="Participant_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>src/semsim/Subject.h</label>
        <link refid="Subject_8h_source"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>src/semsim/SemsimXmlAssistant.h</label>
        <link refid="SemsimXmlAssistant_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>src/semsim/PhysicalPhenomenon.h</label>
        <link refid="PhysicalPhenomenon_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>src/semsim/Predicate.h</label>
        <link refid="Predicate_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>src/redland/RedlandAPIWrapper/src/LibrdfNode.h</label>
        <link refid="LibrdfNode_8h"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>src/redland/RedlandAPIWrapper/src/RedlandAPIWrapper.h</label>
        <link refid="RedlandAPIWrapper_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>src/redland/RedlandAPIWrapper/src/LibrdfStatement.h</label>
        <link refid="LibrdfStatement_8h_source"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>src/redland/RedlandAPIWrapper/src/LibrdfModel.h</label>
        <link refid="LibrdfModel_8h_source"/>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>src/semsim/Editor.h</label>
        <link refid="Editor_8h_source"/>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>src/redland/RedlandAPIWrapper/src/LibrdfSerializer.h</label>
        <link refid="LibrdfSerializer_8h_source"/>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classredland_1_1LibrdfNode" prot="public">redland::LibrdfNode</innerclass>
    <innernamespace refid="namespaceredland">redland</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Ciaran<sp/>on<sp/>5/17/2020.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIBSEMSIM_LIBRDFNODE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBSEMSIM_LIBRDFNODE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;librdf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;raptor2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LibrdfUri.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;World.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LibrdfException.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>todo</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>objcet<sp/>is<sp/>a<sp/>bit<sp/>of<sp/>a<sp/>mess<sp/>at<sp/>the<sp/>moment.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>Its<sp/>currently<sp/>not<sp/>really<sp/>being<sp/>used<sp/>as<sp/>an</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>object,<sp/>but<sp/>as<sp/>a<sp/>static<sp/>librdf_node*<sp/>generator.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>Probably<sp/>the<sp/>best<sp/>thing<sp/>to<sp/>do<sp/>is<sp/>remove<sp/>all</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>methods<sp/>except<sp/>the<sp/>librdf_node*<sp/>generators</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>which<sp/>are<sp/>actually<sp/>used<sp/>in<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>code.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceredland" kindref="compound">redland</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classredland_1_1LibrdfNode" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>librdf_node*<sp/>node_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeNode(librdf_node*<sp/>node);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeNode();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref><sp/>&amp;node)<sp/>=<sp/>delete<sp/>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref>(<ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref>&amp;&amp;node)<sp/>noexcept<sp/>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref>&amp;<sp/>node)<sp/>=<sp/>delete<sp/>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref>&amp;<sp/>operator=(<ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref>&amp;&amp;<sp/>node)<sp/>noexcept<sp/>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref>(librdf_node<sp/>*node);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>librdf_node<sp/>*</highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref><sp/>fromUriString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;uri_string);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref><sp/>fromBlank(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;blank);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref><sp/>fromLiteral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;literal,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;literal_datatype_uri<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;xml_language<sp/>=<sp/>std::string());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raptor_term_type<sp/>getRaptorTermType();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>str(librdf_node*<sp/>node);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref><sp/>getLiteralDatatype();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>getLiteralLanguage();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>getBlankIdentifier();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref><sp/>getUri();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUri(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;uri);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLiteralDatatype(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>datatype);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>validateLiteralDatatype(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;literal_datatype_uri);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBlankIdentifier(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;identifier);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//LIBSEMSIM_LIBRDFNODE_H</highlight></codeline>
    </programlisting>
    <location file="src/redland/RedlandAPIWrapper/src/LibrdfNode.h"/>
  </compounddef>
</doxygen>
