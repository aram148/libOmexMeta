<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" 
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="redland-list">
<refmeta>
<refentrytitle role="top_of_page" id="redland-list.top_of_page">list</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>REDLAND Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>list</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="redland-list.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="librdf-list"><returnvalue>librdf_list</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="librdf-new-list">librdf_new_list</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-free-list">librdf_free_list</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-list-clear">librdf_list_clear</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-list-add">librdf_list_add</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-list-unshift">librdf_list_unshift</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="librdf-list-shift">librdf_list_shift</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="librdf-list-pop">librdf_list_pop</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="librdf-list-remove">librdf_list_remove</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-list-contains">librdf_list_contains</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-list-size">librdf_list_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-list-set-equals">librdf_list_set_equals</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="librdf-iterator"><returnvalue>librdf_iterator</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="librdf-list-get-iterator">librdf_list_get_iterator</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-list-foreach">librdf_list_foreach</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="redland-list.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="librdf-list">librdf_list</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="redland-list.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="redland-list.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="librdf-new-list" role="function">
<title>librdf_new_list&#160;()</title>
<indexterm zone="librdf-new-list"><primary>librdf_new_list</primary></indexterm>
<programlisting language="C"><link linkend="librdf-list"><returnvalue>librdf_list</returnvalue></link>&#160;*
librdf_new_list (<parameter><link linkend="librdf-world"><type>librdf_world</type></link> *world</parameter>);</programlisting>
<para>Constructor - create a new <link linkend="librdf-list"><type>librdf_list</type></link>.</para>
<refsect3 id="librdf-new-list.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>world</para></entry>
<entry role="parameter_description"><para>redland world object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-new-list.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="librdf-list"><type>librdf_list</type></link> or NULL on failure</para>
</refsect3></refsect2>
<refsect2 id="librdf-free-list" role="function">
<title>librdf_free_list&#160;()</title>
<indexterm zone="librdf-free-list"><primary>librdf_free_list</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
librdf_free_list (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>);</programlisting>
<para>Destructor - destroy a <link linkend="librdf-list"><type>librdf_list</type></link> object.</para>
<refsect3 id="librdf-free-list.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="librdf-list-clear" role="function">
<title>librdf_list_clear&#160;()</title>
<indexterm zone="librdf-list-clear"><primary>librdf_list_clear</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
librdf_list_clear (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>);</programlisting>
<para>Empty an librdf_list.</para>
<refsect3 id="librdf-list-clear.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="librdf-list-add" role="function">
<title>librdf_list_add&#160;()</title>
<indexterm zone="librdf-list-add"><primary>librdf_list_add</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
librdf_list_add (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>,
                 <parameter><link linkend="void"><type>void</type></link> *data</parameter>);</programlisting>
<para>Add a data item to the end of a librdf_list.</para>
<para>Equivalent to the list 'push' notion, thus if <link linkend="librdf-list-pop"><function>librdf_list_pop()</function></link>
is called after this, it will return the value added here.</para>
<refsect3 id="librdf-list-add.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the data value</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-list-add.returns" role="returns">
<title>Returns</title>
<para> non 0 on failure</para>
</refsect3></refsect2>
<refsect2 id="librdf-list-unshift" role="function">
<title>librdf_list_unshift&#160;()</title>
<indexterm zone="librdf-list-unshift"><primary>librdf_list_unshift</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
librdf_list_unshift (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>,
                     <parameter><link linkend="void"><type>void</type></link> *data</parameter>);</programlisting>
<para>Add a data item to the start of a librdf_list.</para>
<para>if <link linkend="librdf-list-shift"><function>librdf_list_shift()</function></link> is called after this, it will return the value
added here.</para>
<refsect3 id="librdf-list-unshift.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the data value</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-list-unshift.returns" role="returns">
<title>Returns</title>
<para> non 0 on failure</para>
</refsect3></refsect2>
<refsect2 id="librdf-list-shift" role="function">
<title>librdf_list_shift&#160;()</title>
<indexterm zone="librdf-list-shift"><primary>librdf_list_shift</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
librdf_list_shift (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>);</programlisting>
<para>Remove and return the data at the start of the list.</para>
<refsect3 id="librdf-list-shift.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-list-shift.returns" role="returns">
<title>Returns</title>
<para> the data object or NULL if the list is empty</para>
</refsect3></refsect2>
<refsect2 id="librdf-list-pop" role="function">
<title>librdf_list_pop&#160;()</title>
<indexterm zone="librdf-list-pop"><primary>librdf_list_pop</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
librdf_list_pop (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>);</programlisting>
<para>Remove and return the data at the end of the list.</para>
<refsect3 id="librdf-list-pop.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-list-pop.returns" role="returns">
<title>Returns</title>
<para> the data object or NULL if the list is empty</para>
</refsect3></refsect2>
<refsect2 id="librdf-list-remove" role="function">
<title>librdf_list_remove&#160;()</title>
<indexterm zone="librdf-list-remove"><primary>librdf_list_remove</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
librdf_list_remove (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>,
                    <parameter><link linkend="void"><type>void</type></link> *data</parameter>);</programlisting>
<para>Remove a data item from an librdf_list.</para>
<para>The search is done using the 'equals' function which may be set
by <link linkend="librdf-list-set-equals"><function>librdf_list_set_equals()</function></link> or by straight comparison of pointers
if not set.</para>
<refsect3 id="librdf-list-remove.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the data item</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-list-remove.returns" role="returns">
<title>Returns</title>
<para> the data stored or NULL on failure (not found or list empty)</para>
</refsect3></refsect2>
<refsect2 id="librdf-list-contains" role="function">
<title>librdf_list_contains&#160;()</title>
<indexterm zone="librdf-list-contains"><primary>librdf_list_contains</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
librdf_list_contains (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>,
                      <parameter><link linkend="void"><type>void</type></link> *data</parameter>);</programlisting>
<para>Check for presence of data item in list.</para>
<para>The search is done using the 'equals' function which may be set
by <link linkend="librdf-list-set-equals"><function>librdf_list_set_equals()</function></link> or by straight comparison of pointers
if not set.</para>
<refsect3 id="librdf-list-contains.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the data value</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-list-contains.returns" role="returns">
<title>Returns</title>
<para> non 0 if item was found</para>
</refsect3></refsect2>
<refsect2 id="librdf-list-size" role="function">
<title>librdf_list_size&#160;()</title>
<indexterm zone="librdf-list-size"><primary>librdf_list_size</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
librdf_list_size (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>);</programlisting>
<para>Return the length of the list.</para>
<refsect3 id="librdf-list-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-list-size.returns" role="returns">
<title>Returns</title>
<para> length of the list</para>
</refsect3></refsect2>
<refsect2 id="librdf-list-set-equals" role="function">
<title>librdf_list_set_equals&#160;()</title>
<indexterm zone="librdf-list-set-equals"><primary>librdf_list_set_equals</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
librdf_list_set_equals (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> (*equals) (void* data1, void *data2)</parameter>);</programlisting>
<para>Set the equals function for the list.</para>
<para>The function given is used when comparing items in the list
during searches such as those done in <link linkend="librdf-list-remove"><function>librdf_list_remove()</function></link> or
<link linkend="librdf-list-contains"><function>librdf_list_contains()</function></link>.</para>
<refsect3 id="librdf-list-set-equals.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>equals</para></entry>
<entry role="parameter_description"><para>the equals function</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="librdf-list-get-iterator" role="function">
<title>librdf_list_get_iterator&#160;()</title>
<indexterm zone="librdf-list-get-iterator"><primary>librdf_list_get_iterator</primary></indexterm>
<programlisting language="C"><link linkend="librdf-iterator"><returnvalue>librdf_iterator</returnvalue></link>&#160;*
librdf_list_get_iterator (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>);</programlisting>
<para>Get an iterator for the list.</para>
<refsect3 id="librdf-list-get-iterator.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-list-get-iterator.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="librdf-iterator"><type>librdf_iterator</type></link> object or NULL on failure</para>
</refsect3></refsect2>
<refsect2 id="librdf-list-foreach" role="function">
<title>librdf_list_foreach&#160;()</title>
<indexterm zone="librdf-list-foreach"><primary>librdf_list_foreach</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
librdf_list_foreach (<parameter><link linkend="librdf-list"><type>librdf_list</type></link> *list</parameter>,
                     <parameter><link linkend="void"><type>void</type></link> (*fn) (void *, void *)</parameter>,
                     <parameter><link linkend="void"><type>void</type></link> *user_data</parameter>);</programlisting>
<para>Apply a function for each data item in a librdf_list.</para>
<refsect3 id="librdf-list-foreach.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para><link linkend="librdf-list"><type>librdf_list</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>fn</para></entry>
<entry role="parameter_description"><para>pointer to function to apply that takes data pointer and user data parameters</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user data for applied function </para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="redland-list.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="librdf-list" role="typedef">
<title>librdf_list</title>
<indexterm zone="librdf-list"><primary>librdf_list</primary></indexterm>
<programlisting language="C">typedef struct librdf_list_s librdf_list;
</programlisting>
<para>Redland list class.</para>
</refsect2>

</refsect1>

</refentry>
