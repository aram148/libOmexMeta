<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" 
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="redland-log">
<refmeta>
<refentrytitle role="top_of_page" id="redland-log.top_of_page">log</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>REDLAND Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>log</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="redland-log.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="librdf-log-level-func">*librdf_log_level_func</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="librdf-log-func">*librdf_log_func</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-log-message-code">librdf_log_message_code</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="librdf-log-level"><returnvalue>librdf_log_level</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-log-message-level">librdf_log_message_level</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="librdf-log-facility"><returnvalue>librdf_log_facility</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-log-message-facility">librdf_log_message_facility</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="librdf-log-message-message">librdf_log_message_message</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="raptor-locator"><returnvalue>raptor_locator</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="librdf-log-message-locator">librdf_log_message_locator</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="redland-log.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="librdf-log-level">librdf_log_level</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="librdf-log-facility">librdf_log_facility</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="redland-log.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="redland-log.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="librdf-log-level-func" role="function">
<title>librdf_log_level_func&#160;()</title>
<indexterm zone="librdf-log-level-func"><primary>librdf_log_level_func</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*librdf_log_level_func<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="void"><type>void</type></link> *user_data</parameter>,
                          <parameter>const <link linkend="char"><type>char</type></link> *message</parameter>,
                          <parameter><link linkend="va-list"><type>va_list</type></link> arguments</parameter>);</programlisting>
<para>Handler for one log level, for the warning and error levels ONLY.
Used by <link linkend="librdf-world-set-warning"><type>librdf_world_set_warning</type></link> and <link linkend="librdf-world-set-error"><type>librdf_world_set_error</type></link>.</para>
<refsect3 id="librdf-log-level-func.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>User data pointer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>Log message.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>arguments</para></entry>
<entry role="parameter_description"><para>Message arguments.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-log-level-func.returns" role="returns">
<title>Returns</title>
<para> non-zero to indicate log message has been handled </para>
</refsect3></refsect2>
<refsect2 id="librdf-log-func" role="function">
<title>librdf_log_func&#160;()</title>
<indexterm zone="librdf-log-func"><primary>librdf_log_func</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*librdf_log_func<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="void"><type>void</type></link> *user_data</parameter>,
                    <parameter><link linkend="librdf-log-message"><type>librdf_log_message</type></link> *message</parameter>);</programlisting>
<para>Handler for all log levels.</para>
<refsect3 id="librdf-log-func.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>User data pointer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>Log message structure pointer.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-log-func.returns" role="returns">
<title>Returns</title>
<para> non-zero to indicate log message has been handled </para>
</refsect3></refsect2>
<refsect2 id="librdf-log-message-code" role="function">
<title>librdf_log_message_code&#160;()</title>
<indexterm zone="librdf-log-message-code"><primary>librdf_log_message_code</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
librdf_log_message_code (<parameter><link linkend="librdf-log-message"><type>librdf_log_message</type></link> *message</parameter>);</programlisting>
<para>Retrieve error code from log message.</para>
<refsect3 id="librdf-log-message-code.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>log message</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-log-message-code.returns" role="returns">
<title>Returns</title>
<para> int error code</para>
</refsect3></refsect2>
<refsect2 id="librdf-log-message-level" role="function">
<title>librdf_log_message_level&#160;()</title>
<indexterm zone="librdf-log-message-level"><primary>librdf_log_message_level</primary></indexterm>
<programlisting language="C"><link linkend="librdf-log-level"><returnvalue>librdf_log_level</returnvalue></link>
librdf_log_message_level (<parameter><link linkend="librdf-log-message"><type>librdf_log_message</type></link> *message</parameter>);</programlisting>
<para>Retrieve severity of log message.</para>
<para>The log message severity level is defined in rdf_log.h as values
of enum <link linkend="librdf-log-level"><type>librdf_log_level</type></link></para>
<refsect3 id="librdf-log-message-level.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>log message</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-log-message-level.returns" role="returns">
<title>Returns</title>
<para> severity level</para>
</refsect3></refsect2>
<refsect2 id="librdf-log-message-facility" role="function">
<title>librdf_log_message_facility&#160;()</title>
<indexterm zone="librdf-log-message-facility"><primary>librdf_log_message_facility</primary></indexterm>
<programlisting language="C"><link linkend="librdf-log-facility"><returnvalue>librdf_log_facility</returnvalue></link>
librdf_log_message_facility (<parameter><link linkend="librdf-log-message"><type>librdf_log_message</type></link> *message</parameter>);</programlisting>
<para>Retrieve facility that generated the message.</para>
<para>The log message facility is defined in rdf_log.h as values
of enum <link linkend="librdf-log-facility"><type>librdf_log_facility</type></link></para>
<refsect3 id="librdf-log-message-facility.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>log message</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-log-message-facility.returns" role="returns">
<title>Returns</title>
<para> ID of Redland facility that generated the log message.</para>
</refsect3></refsect2>
<refsect2 id="librdf-log-message-message" role="function">
<title>librdf_log_message_message&#160;()</title>
<indexterm zone="librdf-log-message-message"><primary>librdf_log_message_message</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
librdf_log_message_message (<parameter><link linkend="librdf-log-message"><type>librdf_log_message</type></link> *message</parameter>);</programlisting>
<para>Retrieve text message from log entry.</para>
<para>The string returned is shared and must be copied by the caller
if required to be retained.</para>
<refsect3 id="librdf-log-message-message.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>log message</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-log-message-message.returns" role="returns">
<title>Returns</title>
<para> shared pointer to the log message string</para>
</refsect3></refsect2>
<refsect2 id="librdf-log-message-locator" role="function">
<title>librdf_log_message_locator&#160;()</title>
<indexterm zone="librdf-log-message-locator"><primary>librdf_log_message_locator</primary></indexterm>
<programlisting language="C"><link linkend="raptor-locator"><returnvalue>raptor_locator</returnvalue></link>&#160;*
librdf_log_message_locator (<parameter><link linkend="librdf-log-message"><type>librdf_log_message</type></link> *message</parameter>);</programlisting>
<para>Retrieve locator of log entry.</para>
<refsect3 id="librdf-log-message-locator.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>log message</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-log-message-locator.returns" role="returns">
<title>Returns</title>
<para> pointer to an appropriate raptor_locator* or NULL if not available</para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="redland-log.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="librdf-log-level" role="enum">
<title>enum librdf_log_level</title>
<indexterm zone="librdf-log-level"><primary>librdf_log_level</primary></indexterm>
<para>Indicates the level of the log message.</para>
<refsect3 id="librdf-log-level.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-LOG-NONE:CAPS">LIBRDF_LOG_NONE</para></entry>
<entry role="enum_member_description"><para>No level</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-LOG-DEBUG:CAPS">LIBRDF_LOG_DEBUG</para></entry>
<entry role="enum_member_description"><para>Debug.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-LOG-INFO:CAPS">LIBRDF_LOG_INFO</para></entry>
<entry role="enum_member_description"><para>Information.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-LOG-WARN:CAPS">LIBRDF_LOG_WARN</para></entry>
<entry role="enum_member_description"><para>Warning.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-LOG-ERROR:CAPS">LIBRDF_LOG_ERROR</para></entry>
<entry role="enum_member_description"><para>Recoverable error.  Program can continue.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-LOG-FATAL:CAPS">LIBRDF_LOG_FATAL</para></entry>
<entry role="enum_member_description"><para>Fatal error.  Program will abort if this is not caught.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-LOG-LAST:CAPS">LIBRDF_LOG_LAST</para></entry>
<entry role="enum_member_description"><para>Internal, never returned.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="librdf-log-facility" role="enum">
<title>enum librdf_log_facility</title>
<indexterm zone="librdf-log-facility"><primary>librdf_log_facility</primary></indexterm>
<para>Indicates the part of the system that generated the log message.</para>
<refsect3 id="librdf-log-facility.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-NONE:CAPS">LIBRDF_FROM_NONE</para></entry>
<entry role="enum_member_description"><para>Associated with no part.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-CONCEPTS:CAPS">LIBRDF_FROM_CONCEPTS</para></entry>
<entry role="enum_member_description"><para>Concepts</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-DIGEST:CAPS">LIBRDF_FROM_DIGEST</para></entry>
<entry role="enum_member_description"><para>Digest</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-FILES:CAPS">LIBRDF_FROM_FILES</para></entry>
<entry role="enum_member_description"><para>Files</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-HASH:CAPS">LIBRDF_FROM_HASH</para></entry>
<entry role="enum_member_description"><para>Hash</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-INIT:CAPS">LIBRDF_FROM_INIT</para></entry>
<entry role="enum_member_description"><para>Init</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-ITERATOR:CAPS">LIBRDF_FROM_ITERATOR</para></entry>
<entry role="enum_member_description"><para>Iterator</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-LIST:CAPS">LIBRDF_FROM_LIST</para></entry>
<entry role="enum_member_description"><para>List</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-MODEL:CAPS">LIBRDF_FROM_MODEL</para></entry>
<entry role="enum_member_description"><para>Model</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-NODE:CAPS">LIBRDF_FROM_NODE</para></entry>
<entry role="enum_member_description"><para>Node</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-PARSER:CAPS">LIBRDF_FROM_PARSER</para></entry>
<entry role="enum_member_description"><para>Parser</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-QUERY:CAPS">LIBRDF_FROM_QUERY</para></entry>
<entry role="enum_member_description"><para>Query</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-SERIALIZER:CAPS">LIBRDF_FROM_SERIALIZER</para></entry>
<entry role="enum_member_description"><para>Serializer</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-STATEMENT:CAPS">LIBRDF_FROM_STATEMENT</para></entry>
<entry role="enum_member_description"><para>Statement</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-STORAGE:CAPS">LIBRDF_FROM_STORAGE</para></entry>
<entry role="enum_member_description"><para>Storage</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-STREAM:CAPS">LIBRDF_FROM_STREAM</para></entry>
<entry role="enum_member_description"><para>Stream</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-URI:CAPS">LIBRDF_FROM_URI</para></entry>
<entry role="enum_member_description"><para>URI</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-UTF8:CAPS">LIBRDF_FROM_UTF8</para></entry>
<entry role="enum_member_description"><para>UTF8</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-MEMORY:CAPS">LIBRDF_FROM_MEMORY</para></entry>
<entry role="enum_member_description"><para>Memory</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-RAPTOR:CAPS">LIBRDF_FROM_RAPTOR</para></entry>
<entry role="enum_member_description"><para>Raptor library (parser or serializer; Raptor 2.0.0+).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="LIBRDF-FROM-LAST:CAPS">LIBRDF_FROM_LAST</para></entry>
<entry role="enum_member_description"><para>Internal, never returned.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>

</refentry>
