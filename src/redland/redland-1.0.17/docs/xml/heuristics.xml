<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" 
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="redland-heuristics">
<refmeta>
<refentrytitle role="top_of_page" id="redland-heuristics.top_of_page">heuristics</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>REDLAND Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>heuristics</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="redland-heuristics.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="librdf-heuristic-gen-name">librdf_heuristic_gen_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-heuristic-is-blank-node">librdf_heuristic_is_blank_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="librdf-heuristic-get-blank-node">librdf_heuristic_get_blank_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="librdf-heuristic-object-is-literal">librdf_heuristic_object_is_literal</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="redland-heuristics.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="redland-heuristics.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="librdf-heuristic-gen-name" role="function">
<title>librdf_heuristic_gen_name&#160;()</title>
<indexterm zone="librdf-heuristic-gen-name"><primary>librdf_heuristic_gen_name</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
librdf_heuristic_gen_name (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>Generate a new name from an existing name.</para>
<para>Adds an integer or increases the integer at the end of the name
in order to generate a new one</para>
<refsect3 id="librdf-heuristic-gen-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>the name</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-heuristic-gen-name.returns" role="returns">
<title>Returns</title>
<para> a new name or NULL on failure</para>
</refsect3></refsect2>
<refsect2 id="librdf-heuristic-is-blank-node" role="function">
<title>librdf_heuristic_is_blank_node&#160;()</title>
<indexterm zone="librdf-heuristic-is-blank-node"><primary>librdf_heuristic_is_blank_node</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
librdf_heuristic_is_blank_node (<parameter>const <link linkend="char"><type>char</type></link> *node</parameter>);</programlisting>
<para>Try to guess if an node string is a blank node identifier.</para>
<para>The guessing is done by assuming the object is a blank node if it matches
^_: like N-Triples, N3 and related.</para>
<refsect3 id="librdf-heuristic-is-blank-node.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>string object to guess type</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-heuristic-is-blank-node.returns" role="returns">
<title>Returns</title>
<para> non 0 if node is probably a blank node identifier</para>
</refsect3></refsect2>
<refsect2 id="librdf-heuristic-get-blank-node" role="function">
<title>librdf_heuristic_get_blank_node&#160;()</title>
<indexterm zone="librdf-heuristic-get-blank-node"><primary>librdf_heuristic_get_blank_node</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
librdf_heuristic_get_blank_node (<parameter>const <link linkend="char"><type>char</type></link> *node</parameter>);</programlisting>
<para>Get a blank node identifier from a node string.</para>
<para>Picks the blank node identifier out of a string.  Looks for things
like _:ABC</para>
<refsect3 id="librdf-heuristic-get-blank-node.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>string object to guess type</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-heuristic-get-blank-node.returns" role="returns">
<title>Returns</title>
<para> the blank node identifer string or NULL if the node does not seem to be a blank node identifier</para>
</refsect3></refsect2>
<refsect2 id="librdf-heuristic-object-is-literal" role="function">
<title>librdf_heuristic_object_is_literal&#160;()</title>
<indexterm zone="librdf-heuristic-object-is-literal"><primary>librdf_heuristic_object_is_literal</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
librdf_heuristic_object_is_literal (<parameter>const <link linkend="char"><type>char</type></link> *object</parameter>);</programlisting>
<para>Try to guess if an object string is a literal or a resource.</para>
<para>The guessing is done by assuming the object is a URL if it matches
  ^[<link linkend="isalnum"><function>isalnum()</function></link>]+:[^<link linkend="isblank"><function>isblank()</function></link>]+$</para>
<para>This will be fooled by literals of form 'thing:non-blank-thing' but
is good enough.</para>
<refsect3 id="librdf-heuristic-object-is-literal.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>string object to guess type</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="librdf-heuristic-object-is-literal.returns" role="returns">
<title>Returns</title>
<para> non 0 if object is probably a literal</para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="redland-heuristics.other_details" role="details">
<title role="details.title">Types and Values</title>

</refsect1>

</refentry>
